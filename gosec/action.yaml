name: gosec
author: "Bekir Bekirov"
description: "Scan and Send Golang project with Gosec tool"
inputs:
  app-folder:
    description: "Application folder"
    required: false
    default: "."
  go-version:
    description: "Go version to use"
    required: false
    default: "1.15"
  send-results:
    description: "Send scan results"
    required: false
    default: "false"
  url:
    description: Scan results collector URL
    required: false
  user:
    description: Collector username
    required: false
  password:
    description: Collector password
    required: false
runs:
  using: composite
  steps:
    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: ${{ inputs.go-version }}
    - name: Setup Gosec
      shell: bash
      working-directory: ${{ inputs.app-folder }}
      run: |
        go get github.com/securego/gosec/cmd/gosec
    - name: Define repo name
      id: define-repo-name
      shell: bash
      run: |
        REPO_NAME=${{ github.event.repository.name }}
        if [[ ${{ inputs.app-folder }} != "." ]]
        then
          REPO_NAME="${REPO_NAME}/${{ inputs.app-folder }}"
        fi
        echo "Repo name defined as: $REPO_NAME"
        echo "::set-output name=repo-name::$(echo $REPO_NAME)"
    - name: Test, show or send gosec
      shell: bash
      working-directory: ${{ inputs.app-folder }}
      run: |
        if [[ ${{ inputs.send-results }} == true ]]
        then
          gosec -no-fail -fmt=json -out=results.json ./...
          curl --fail -u ${{ inputs.user }}:${{ inputs.password }} \
              -F "repo-name=${{ steps.define-repo-name.outputs.repo-name }}"  \
              -F "repo-url=${{ github.repositoryUrl }}" \
              -F "scan-type=Gosec Scanner" \
              -F "repo-branch=${{ github.ref_name }}" \
              -F "file=@results.json" \
              ${{ inputs.url }}
        else
          set +e
          gosec -fmt=json -out=results.json ./...
          SCAN_RESULT=$?
          set -e
          echo
          echo "Scan results"
          echo "------------"
          cat results.json
          echo
          exit $SCAN_RESULT
        fi
