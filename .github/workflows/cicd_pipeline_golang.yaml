name: Build and Deploy

concurrency:
  group: build-and-deploy-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_call:
    inputs:
      app-name:
        description: 'Application name. Will be used in docker image name'
        required: true
        type: string
      app-folder:
        description: 'Application location folder'
        required: true
        type: string
        default: "."
      in-docker-build:
        description: 'Is builds project during docker build'
        required: false
        type: boolean
        default: true
      deploy-to-rsrv:
        description: 'Deploy to reserve cluster'
        required: false
        type: boolean
        default: true
      stop-release-filename:
        description: 'If file exists then deploying to production will be omited'
        required: false
        type: string
        default: ""
      go-version:
        description: 'Go version to use'
        required: false
        type: string
        default: "1.15"
      go-test-cmd:
        description: "Command that runs tests"
        required: false
        type: string
        default: ""
    secrets:
      dev-repo:
        required: true
      dev-k8s-context:
        required: true
      prod-repo:
        required: true
      prod-k8s-context:
        required: true
      rsrv-repo:
        required: false
      rsrv-k8s-context:
        required: false
      infosec-url:
        required: true
      infosec-user:
        required: true
      infosec-pass:
        required: true
      sonar-organization:
        required: true
      sonar-login:
        required: true

jobs:
  check-allow-release:
    runs-on: [ self-hosted, linux, dev ]
    outputs:
      release-to-prod: ${{ steps.allow-release.outputs.release-to-prod }}
      release-to-rsrv: ${{ steps.allow-release.outputs.release-to-rsrv }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Check allow release
        id: allow-release
        uses: pb-digital/actions/check-allow-release@v2
        with:
          app-folder: ${{ inputs.app-folder }}
          deploy-to-rsrv: ${{ inputs.deploy-to-rsrv }}
          stop-release-filename: ${{ inputs.stop-release-filename }}
  validate-code:
    runs-on: [ self-hosted, linux, dev ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build and Test
        uses: pb-digital/actions/go-build@v2
        with:
          app-folder: ${{ inputs.app-folder }}
          go-version: ${{ inputs.go-version }}
          go-test-cmd: ${{ inputs.go-test-cmd }}
  validate-infra:
    runs-on: [ self-hosted, linux, kubectl, dev ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Validate
        id: validate
        uses: pb-digital/actions/validate-msc@v2
        with:
          app-folder: ${{ inputs.app-folder }}
          k8s-context: ${{ secrets.dev-k8s-context }}
  gosec-scan:
    runs-on: [ self-hosted, linux, dev ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Gosec scan
        uses: pb-digital/actions/gosec@v2
        with:
          app-folder: ${{ inputs.app-folder }}
          go-version: ${{ inputs.go-version }}
  gosec-send:
    if: ${{ github.ref_name == 'develop' }}
    runs-on: [ self-hosted, linux, dev ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Gosec scan and send
        uses: pb-digital/actions/gosec@v2
        with:
          app-folder: ${{ inputs.app-folder }}
          send-results: "true"
          url: ${{ secrets.infosec-url }}
          user: ${{ secrets.infosec-user }}
          password: ${{ secrets.infosec-pass }}
          go-version: ${{ inputs.go-version }}
  send-to-sonar:
    needs: [ validate-code ]
    runs-on: [ self-hosted, linux, dev ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Send to Sonar
        uses: pb-digital/actions/send-to-sonar@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          app-folder: ${{ inputs.app-folder }}
          sonar-organization: ${{ secrets.sonar-organization }}
          sonar-login: ${{ secrets.sonar-login }}
  deploy_dev:
    if: ${{ github.ref_name == 'develop' }}
    needs: [ validate-code, validate-infra ]
    runs-on: [ self-hosted, linux, docker, kubectl, dev ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        if: ${{ inputs.in-docker-build != true}}
        uses: pb-digital/actions/go-build@v2
        with:
          build-only: true
          app-folder: ${{ inputs.app-folder }}
          go-version: ${{ inputs.go-version }}
          go-test-cmd: ${{ inputs.go-test-cmd }}
      - name: "Deploy"
        uses: pb-digital/actions/deploy-msc@v2
        with:
          appName: ${{ inputs.app-name }}
          app-folder: ${{ inputs.app-folder }}
          additional-tag: dev
          dockerRepo: ${{ secrets.dev-repo }}
          k8s-context: ${{ secrets.dev-k8s-context }}
  deploy_prod:
    if: ${{ needs.check-allow-release.outputs.release-to-prod == 'true' }}
    needs: [ validate-code, validate-infra, check-allow-release ]
    runs-on: [ self-hosted, linux, docker, kubectl, prod ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        if: ${{ inputs.in-docker-build != true}}
        uses: pb-digital/actions/go-build@v2
        with:
          build-only: true
          app-folder: ${{ inputs.app-folder }}
          go-version: ${{ inputs.go-version }}
          go-test-cmd: ${{ inputs.go-test-cmd }}
      - name: "Deploy"
        id: deploy
        uses: pb-digital/actions/deploy-msc@v2
        with:
          appName: ${{ inputs.app-name }}
          app-folder: ${{ inputs.app-folder }}
          additional-tag: prod
          dockerRepo: ${{ secrets.prod-repo }}
          k8s-context: ${{ secrets.prod-k8s-context }}
  deploy_rsrv:
    if: ${{ needs.check-allow-release.outputs.release-to-rsrv == 'true' }}
    needs: [ validate-code, validate-infra, check-allow-release ]
    runs-on: [ self-hosted, linux, docker, kubectl, prod ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        if: ${{ inputs.in-docker-build != true}}
        uses: pb-digital/actions/go-build@v2
        with:
          build-only: true
          app-folder: ${{ inputs.app-folder }}
          go-version: ${{ inputs.go-version }}
          go-test-cmd: ${{ inputs.go-test-cmd }}
      - name: "Deploy"
        id: deploy
        uses: pb-digital/actions/deploy-msc@v2
        with:
          appName: ${{ inputs.app-name }}
          app-folder: ${{ inputs.app-folder }}
          additional-tag: rsrv
          dockerRepo: ${{ secrets.rsrv-repo }}
          k8s-context: ${{ secrets.rsrv-k8s-context }}
